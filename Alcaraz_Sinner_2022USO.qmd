---
title: "Alcaraz_Sinner_2022USO"
format: html
---

```{r}
#| output: false
library(tidyverse)
library(compr)
library(broom)
library(dplyr)
library(readr)
library(deuce)
library(ggplot2)

# Source the functions
source("comp_prior_start.R")
source("bayes_intro.R")
source("wrangle_point_level_data.R")
source("Create_Prior.R")
source("get_probabilities_df.R")
source("get_plot_df.R")
```

We are going to look at the Alcaraz vs Sinner 2022 US Open Quarterfinal match. Alcaraz defeated Sinner in 5 sets: 6-3, 6-7, 6-7, 7-5, 6-3. We are going to mess around with the prior distribution and see how it changes the predicted win probabilities throughout the match:

  1. First, we will use a prior distribution that includes all hard court matches over the last year, including the 2021 US Open, and all matches of the 2022 US Open prior to the Quarterfinals.

  2. Then, we will use a prior distribution that only includes hard court matches from the "lead-up" tournaments to the 2022 US Open and the 2022 US Open itself (matches prior to the Quarterfinals).

  3. Lastly, we will use a prior distribution that has fixed probabilities for both players and does not update throughout the course of the match.
  
#### 1. Using last year's US Open and this year's US Open prior to the Quarterfinals
  
Get probabilities of Sinner winning a point while serving and while returning
```{r}
aug_mod_sin_large_prior <- create_prior(ext = c("atp_matches_2021.csv",
                                 "atp_matches_2022.csv"),
                         tourn_name = "US Open",
                         surf = "Hard",
                         start_date = "2021-08-30",
                         end_date = "2022-09-06",
                         player1 = "Jannik Sinner",
                         player2 = "Carlos Alcaraz",
                         ref_player = "Novak Djokovic")
# Note that output is always looking at P1 probability
aug_mod_sin_large_prior

# probability Sinner wins a point on serve
expit(0.4105508) # 0.6012199
# probability Sinner wins a point on return
expit(-0.4896720) #  0.3799708

# Do negation for Alcaraz points
# probability Alcaraz wins a point on serve
expit(0.4896720) # 0.6200292
# probability Alcaraz wins a point on return
expit(-0.4105508) # 0.3987801
```

Get the point level data for the 2022 US Open Quarterfinal
```{r}
both_serving_df <- wrangle_point_level(ext = "2022-usopen-points.csv",
                               ID = "2022-usopen-1503")

sin_serving <- both_serving_df[[1]]
alc_serving <- both_serving_df[[2]]
```

Get a data frame with the probabilities for each player seving
```{r}
combined_prob_alc_sin_lp_df <- get_probabilities_df(p1_serving_df = sin_serving,
                                 p2_serving_df = alc_serving,
                                 p1 = "Jannik Sinner",
                                 p2 = "Carlos Alcaraz",
                                 p1_original_prob = 0.4105508,
                                 p1_original_se = 0.04554396,
                                 p2_original_prob = 0.4896720,
                                 p2_original_se = 0.04643726)
```

Now we can plot the probability of Alcaraz winning the match
```{r}
plot_sin_alc_large_prior <- get_plot_df(combined_df = combined_prob_alc_sin_lp_df,
                                        which_player_prob = 2,
                                        best_of_3 = FALSE,
                                        advantage = FALSE)

set_boundaries_alc_sin_large_prior <- plot_sin_alc_large_prior |>
  group_by(total_sets) |>
  summarize(xmin = min(pt_number) - 0.5,
            xmax = max(pt_number) + 0.5)

plot_sin_alc_large_prior |> ggplot(aes(x = pt_number, y = probability)) +
  geom_rect(data = set_boundaries_alc_sin_large_prior, aes(x = NULL, y = NULL, xmin = xmin, xmax = xmax, 
                                       ymin = -Inf, ymax = Inf, fill = total_sets), alpha = 0.2) + 
  geom_line(aes(y = win_prob_px)) +
  labs(x = "Point Number",
       y = "Probability of Winning Match",
       title = "Alcaraz vs Sinner US Open Quarterfinal 2022",
       subtitle = "Probability of Alcaraz Winning Match",
       caption = "Prior contains all hard court tournaments over the last year (incl. 2021 USO)",
       color = "Server") +
  theme_bw()
```

#### 2. Using only the "lead-up" tournaments to the 2022 US Open and the 2022 US Open itself

Get probabilities of Sinner winning a point while serving and while returning. Matches include hard court matches from the 2022 Atlanta Open up until the 2022 US Open Quarterfinals (all hard court matches post-Wimbledon 2022).
```{r}
aug_mod_sin_small_prior <- create_prior(ext = c("atp_matches_2022.csv"),
                         tourn_name = "US Open",
                         surf = "Hard",
                         start_date = "2022-08-25",
                         end_date = "2022-09-06",
                         player1 = "Jannik Sinner",
                         player2 = "Carlos Alcaraz",
                         ref_player = "Daniil Medvedev")
aug_mod_sin_small_prior

# probability Sinner wins a point on serve
expit(0.2168077) # 0.5539906
# probability Sinner wins a point on return
expit(-0.4700036) #  0.3846154
# always looking at P1 probability

# Do negation for Alcaraz points
# probability Alcaraz wins a point on serve
expit(0.4700036) # 0.6153846
# probability Alcaraz wins a point on return
expit(-0.2168077) # 0.4460094
```

Get the point level data for the 2022 US Open Quarterfinal
```{r}
both_serving_df <- wrangle_point_level(ext = "2022-usopen-points.csv",
                               ID = "2022-usopen-1503")

sin_serving_sp <- both_serving_df[[1]]
alc_serving_sp <- both_serving_df[[2]]
```

Get a data frame with the probabilities for each player seving
```{r}
combined_prob_sin_alc_sp_df <- get_probabilities_df(p1_serving_df = sin_serving,
                                 p2_serving_df = alc_serving,
                                 p1 = "Jannik Sinner",
                                 p2 = "Carlos Alcaraz",
                                 p1_original_prob = 0.2168077,
                                 p1_original_se = 0.1378437,
                                 p2_original_prob = 0.4700036,
                                 p2_original_se = 0.1581139)
```

Now we can plot the probability of Alcaraz winning the match
```{r}
plot_sin_alc_small_prior <- get_plot_df(combined_df = combined_prob_sin_alc_sp_df, 
                        which_player_prob = 2,
                        best_of_3 = FALSE,
                        advantage = FALSE)

set_boundaries_alc_sin_small_prior <- plot_sin_alc_small_prior |>
  group_by(total_sets) |>
  summarize(xmin = min(pt_number) - 0.5,
            xmax = max(pt_number) + 0.5)

plot_sin_alc_small_prior |> ggplot(aes(x = pt_number, y = probability)) +
  geom_rect(data = set_boundaries_alc_sin_small_prior, aes(x = NULL, y = NULL, xmin = xmin, xmax = xmax, 
                                       ymin = -Inf, ymax = Inf, fill = total_sets), alpha = 0.2) + 
  geom_line(aes(y = win_prob_px)) +
  labs(x = "Point Number",
       y = "Probability of Winning Match",
       title = "Alcaraz vs Sinner US Open Quarterfinal 2022",
       subtitle = "Probability of Alcaraz Winning Match",
       caption = "Prior contains 'lead-up' tournaments to the 2022 USO and 2022 USO itself",
       color = "Server") +
  theme_bw()
```

#### 3. Using fixed probabilities for both players

No need to create_prior as we are just fixing probabilities for both players.

Get the point level data
```{r}
both_serving_df <- wrangle_point_level(ext = "2022-usopen-points.csv",
                               ID = "2022-usopen-1503")

sin_serving_fp <- both_serving_df[[1]] |> 
  mutate(player1 = "Jannik Sinner",
         player2 = "Carlos Alcaraz") |>
    # also create indicator if serving player won the point
    mutate(server_won = ifelse(PointWinner == 1, 1, 0))

alc_serving_fp <- both_serving_df[[2]] |> 
  mutate(player1 = "Jannik Sinner",
         player2 = "Carlos Alcaraz") |>
    # also create indicator if serving player won the point
    mutate(server_won = ifelse(PointWinner == 2, 1, 0))

combined_sin_alc_fixed_df <- bind_rows(sin_serving_fp, alc_serving_fp) |>
    arrange(pt_number) |>
  mutate(p1_wserv_prob = 0.68,
         p2_wserv_prob = 0.68) |>
  mutate(P1SetsWon = cumsum(SetWinner == 1),
           P2SetsWon = cumsum(SetWinner == 2)) |>
  select(pt_number, player1, player2, PointServer, p1_wserv_prob, p2_wserv_prob,
         P1PointsWon, P2PointsWon, P1GamesWon, P2GamesWon, P1SetsWon, P2SetsWon) |>
  mutate(PointServer = case_when(P1PointsWon == 0 & P2PointsWon == 0 & PointServer == 1 ~ 2,
                                 P1PointsWon == 0 & P2PointsWon == 0 & PointServer == 2 ~ 1,
                                 TRUE ~ PointServer))

plot_sin_alc_fixed_prior <- get_plot_df(combined_df = combined_sin_alc_fixed_df, 
                        which_player_prob = 2,
                        best_of_3 = FALSE,
                        advantage = FALSE)

set_boundaries_alc_sin_fixed_prior <- plot_sin_alc_fixed_prior |>
  group_by(total_sets) |>
  summarize(xmin = min(pt_number) - 0.5,
            xmax = max(pt_number) + 0.5)

plot_sin_alc_fixed_prior |> ggplot(aes(x = pt_number, y = probability)) +
  geom_rect(data = set_boundaries_alc_sin_fixed_prior, aes(x = NULL, y = NULL, xmin = xmin, xmax = xmax, 
                                       ymin = -Inf, ymax = Inf, fill = total_sets), alpha = 0.2) + 
  geom_line(aes(y = win_prob_px)) +
  labs(x = "Point Number",
       y = "Probability of Winning Match",
       title = "Alcaraz vs Sinner US Open Quarterfinal 2022",
       subtitle = "Probability of Alcaraz Winning Match",
       caption = "Prior fixes win probability on serve at 0.68 for both players",
       color = "Server") +
  theme_bw()
```