---
title: "Gauff_Sabalenka_2023USO"
format: html
---

```{r}
#| output: false
library(tidyverse)
library(compr)
library(broom)
library(dplyr)
library(readr)
library(deuce)
library(ggplot2)

# Source the functions
source("comp_prior_start.R")
source("bayes_intro.R")
source("wrangle_point_level_data.R")
source("Create_Prior.R")
source("get_probabilities_df.R")
source("get_plot_df.R")
```

We are going to look at the Gauff vs Sabalenka 2023 US Open Finals match. Gauff defeated Sabalenka in 3 sets: 2-6, 6-3, 6-2. We are going to mess around with the prior distribution and see how it changes the predicted win probabilities throughout the match:

  1. First, we will use a prior distribution that includes all hard court matches over the last year, including the 2022 US Open, and all matches of the 2023 US Open prior to the Finals

  2. Then, we will use a prior distribution that only includes hard court matches from the "lead-up" tournaments to the 2023 US Open and the 2023 US Open itself (matches prior to the Finals).

  3. Lastly, we will use a prior distribution that has fixed probabilities for both players and does not update throughout the course of the match.
  
#### 1. Using last year's US Open and this year's US Open prior to the Finals

Get probabilities of Gauff winning a point while serving and while returning
```{r}
aug_mod_gau_large_prior <- create_prior(ext = c("wta_matches_2022.csv",
                                 "wta_matches_2023.csv"),
                         tourn_name = "US Open",
                         surf = "Hard",
                         start_date = "2022-08-29",
                         end_date = "2023-09-8",
                         player1 = "Coco Gauff",
                         player2 = "Aryna Sabalenka",
                         ref_player = "Iga Swiatek")
# Note that output is always looking at P1 probability
aug_mod_gau_large_prior

# probability Gauff wins a point on serve
expit(0.2616522) # 0.5650424
# probability Gauff wins a point on return
expit(-0.3578947) # 0.4114693

# Do negation for Sabalenka points
# probability Sabalenka wins a point on serve
expit(0.3578947) # 0.5885307
# probability Sabalenka wins a point on return
expit(-0.2616522) # 0.4349576
```

Get the point level data for the 2023 US Open Finals match between Gauff and Sabalenka
```{r}
both_serving_df <- wrangle_point_level(ext = "2023-usopen-points.csv",
                               ID = "2023-usopen-2701")

gauff_serving <- both_serving_df[[1]]
saba_serving <- both_serving_df[[2]]
```

Get a data frame with the probabilities for each player seving
```{r}
combined_prob_gauff_sab_lp_df <- get_probabilities_df(p1_serving_df = gauff_serving,
                                 p2_serving_df = saba_serving,
                                 p1 = "Coco Gauff",
                                 p2 = "Aryna Sabalenka",
                                 p1_original_prob = 0.2616522,
                                 p1_original_se = 0.04906665,
                                 p2_original_prob = 0.3578947,
                                 p2_original_se = 0.04936017)
```

Now we can plot the probability of Coco Guaff winning the match
```{r}
plot_gauff_sab_large_prior <- get_plot_df(combined_df = combined_prob_gauff_sab_lp_df,
                                        which_player_prob = 1,
                                        best_of_3 = TRUE,
                                        advantage = FALSE)

set_boundaries_gauff_sab_large_prior <- plot_gauff_sab_large_prior |>
  group_by(total_sets) |>
  summarize(xmin = min(pt_number) - 0.5,
            xmax = max(pt_number) + 0.5)

plot_gauff_sab_large_prior |> ggplot(aes(x = pt_number, y = probability)) +
  geom_rect(data = set_boundaries_gauff_sab_large_prior, aes(x = NULL, y = NULL, xmin = xmin, xmax = xmax, 
                                       ymin = -Inf, ymax = Inf, fill = total_sets), alpha = 0.2) + 
  geom_line(aes(y = win_prob_px)) +
  labs(x = "Point Number",
       y = "Probability of Winning Match",
       title = "Gauff vs Sabalenka US Open Final 2023",
       subtitle = "Probability of Gauff Winning Match",
       caption = "Prior contains all hard court tournaments over the last year (incl. 2022 USO)",
       color = "Server") +
  coord_cartesian(ylim = c(0, NA)) +
  theme_bw()
```


#### 2. Using only the "lead-up" tournaments to the 2023 US Open and the 2023 US Open itself

Get probabilities of Gauff winning a point while serving and while returning
```{r}
aug_mod_gau_small_prior <- create_prior(ext = "wta_matches_2023.csv",
                         tourn_name = "US Open",
                         surf = "Hard",
                         start_date = "2023-07-24",
                         end_date = "2023-09-8",
                         player1 = "Coco Gauff",
                         player2 = "Aryna Sabalenka",
                         ref_player = "Iga Swiatek")
# Note that output is always looking at P1 probability
aug_mod_gau_small_prior

# probability Gauff wins a point on serve
expit(0.3550237) # 0.5878353
# probability Gauff wins a point on return
expit(-0.1801184) # 0.4550917

# Do negation for Sabalenka points
# probability Sabalenka wins a point on serve
expit(0.1801184) # 0.5449083
# probability Sabalenka wins a point on return
expit(-0.3550237) # 0.4121647
```

Get the point level data for the 2023 US Open Finals match between Gauff and Sabalenka
```{r}
both_serving_df <- wrangle_point_level(ext = "2023-usopen-points.csv",
                               ID = "2023-usopen-2701")

gauff_serving <- both_serving_df[[1]]
saba_serving <- both_serving_df[[2]]
```

Get a data frame with the probabilities for each player seving
```{r}
combined_prob_gauff_sab_sp_df <- get_probabilities_df(p1_serving_df = gauff_serving,
                                 p2_serving_df = saba_serving,
                                 p1 = "Coco Gauff",
                                 p2 = "Aryna Sabalenka",
                                 p1_original_prob = 0.3550237,
                                 p1_original_se = 0.09351795,
                                 p2_original_prob = 0.1801184,
                                 p2_original_se = 0.09535962)
```

Now we can plot the probability of Coco Guaff winning the match
```{r}
plot_gauff_sab_small_prior <- get_plot_df(combined_df = combined_prob_gauff_sab_sp_df,
                                        which_player_prob = 1,
                                        best_of_3 = TRUE,
                                        advantage = FALSE)

set_boundaries_gauff_sab_small_prior <- plot_gauff_sab_small_prior |>
  group_by(total_sets) |>
  summarize(xmin = min(pt_number) - 0.5,
            xmax = max(pt_number) + 0.5)

plot_gauff_sab_small_prior |> ggplot(aes(x = pt_number, y = probability)) +
  geom_rect(data = set_boundaries_gauff_sab_small_prior, aes(x = NULL, y = NULL, xmin = xmin, xmax = xmax, 
                                       ymin = -Inf, ymax = Inf, fill = total_sets), alpha = 0.2) + 
  geom_line(aes(y = win_prob_px)) +
  labs(x = "Point Number",
       y = "Probability of Winning Match",
       title = "Gauff vs Sabalenka US Open Final 2023",
       subtitle = "Probability of Gauff Winning Match",
       caption = "Prior contains 'lead-up' tournaments to the 2023 USO and 2023 USO itself",
       color = "Server") +
  coord_cartesian(ylim = c(0, NA)) +
  theme_bw()
```

#### 3. Using fixed probabilities for both players

No need to create_prior as we are just fixing probabilities for both players.

Get the point level data
```{r}
both_serving_df <- wrangle_point_level(ext = "2023-usopen-points.csv",
                               ID = "2023-usopen-2701")

gauff_serving_fp <- both_serving_df[[1]] |> 
  mutate(player1 = "Coco Gauff",
         player2 = "Aryna Sabalenka") |>
    # also create indicator if serving player won the point
    mutate(server_won = ifelse(PointWinner == 1, 1, 0))

saba_serving_fp <- both_serving_df[[2]] |> 
  mutate(player1 = "Coco Gauff",
         player2 = "Aryna Sabalenka") |>
    # also create indicator if serving player won the point
    mutate(server_won = ifelse(PointWinner == 2, 1, 0))

combined_gauff_sab_fixed_df <- bind_rows(gauff_serving_fp, saba_serving_fp) |>
    arrange(pt_number) |>
  mutate(p1_wserv_prob = 0.6,
         p2_wserv_prob = 0.6) |>
  mutate(P1SetsWon = cumsum(SetWinner == 1),
           P2SetsWon = cumsum(SetWinner == 2)) |>
  select(pt_number, player1, player2, PointServer, p1_wserv_prob, p2_wserv_prob,
         P1PointsWon, P2PointsWon, P1GamesWon, P2GamesWon, P1SetsWon, P2SetsWon) |>
  mutate(PointServer = case_when(P1PointsWon == 0 & P2PointsWon == 0 & PointServer == 1 ~ 2,
                                 P1PointsWon == 0 & P2PointsWon == 0 & PointServer == 2 ~ 1,
                                 TRUE ~ PointServer))

plot_gauff_sab_fixed_prior <- get_plot_df(combined_df = combined_gauff_sab_fixed_df, 
                        which_player_prob = 1,
                        best_of_3 = TRUE,
                        advantage = FALSE)

set_boundaries_gauff_sab_fixed_prior <- plot_gauff_sab_fixed_prior |>
  group_by(total_sets) |>
  summarize(xmin = min(pt_number) - 0.5,
            xmax = max(pt_number) + 0.5)

plot_gauff_sab_fixed_prior |> ggplot(aes(x = pt_number, y = probability)) +
  geom_rect(data = set_boundaries_gauff_sab_fixed_prior, aes(x = NULL, y = NULL, xmin = xmin, xmax = xmax, 
                                       ymin = -Inf, ymax = Inf, fill = total_sets), alpha = 0.2) + 
  geom_line(aes(y = win_prob_px)) +
  labs(x = "Point Number",
       y = "Probability of Winning Match",
       title = "Gauff vs Sabalenka US Open Final 2023",
       subtitle = "Probability of Gauff Winning Match",
       caption = "Prior fixes win probability on serve at 0.60 for both players",
       color = "Server") +
  coord_cartesian(ylim = c(0,1)) +
  theme_bw()
```